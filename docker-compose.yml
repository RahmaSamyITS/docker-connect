

services:
  my-node-app:
    container_name: wizardly_ride
    build:
      context: .
      target: development
    volumes:
      - '/app/node_modules'  # Keep only this

    environment:
      - NODE_ENV=development
    ports:
      - "5000:4000"
    command: ["npm", "start"]
    depends_on:
      - postgres  # Ensure Node app waits for MongoDB

  # mongo:
  #   image: mongo
  #   restart: always
  #   volumes:
  #     - mongo-db:/data/db
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: rahmasamy949
  #     MONGO_INITDB_ROOT_PASSWORD: vCCRVb6LbgucUIs7
  #   ports:
  #     - "27017:27018"

  # mongo-express:
    # image: mongo-express
    # restart: always
    # ports:
    #   - "8081:8081"
    # environment:
    #   ME_CONFIG_MONGODB_ADMINUSERNAME: rahmasamy949
    #   ME_CONFIG_MONGODB_ADMINPASSWORD: vCCRVb6LbgucUIs7
    #   ME_CONFIG_MONGODB_URL: mongodb://rahmasamy949:vCCRVb6LbgucUIs7@mongo:27017/
    #   ME_CONFIG_BASICAUTH: false
    # depends_on:
    #   - mongo  # Ensure Node app waits for MongoDB
  redis : 
    image: redis
    
  nginx:
    image: nginx:stable-alpine
    ports:
     - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - my-node-app
  postgres:
    image: postgres
    container_name: docker-postgres-db
    restart: always
    env_file:
      - .env
    volumes:
      - postgres-db:/var/lib/postgresql/data 
  
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}

volumes:
  mongo-db:
  postgres-db:
